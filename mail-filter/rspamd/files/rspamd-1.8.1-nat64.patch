--- rspamd-1.8.1-nat64/src/libutil/addr.c	2018-06-15 18:53:26.000000000 +0200
+++ rspamd-1.8.1/src/libutil/addr.c	2018-06-28 14:11:52.299819702 +0200
@@ -778,6 +778,24 @@
 	}
 
 	if (ret && target) {
+
+		// Translate IPv6 with 64:ff9b prefixe to IPv4.
+
+		if (addr && addr->af == AF_INET6) {
+			static char addr_str[INET6_ADDRSTRLEN + 1];
+			const char *string = inet_ntop (addr->af, &addr->u.in.addr.s6.sin6_addr,
+				addr_str, sizeof (addr_str));
+			if (strncmp (string, "64:ff9b::", strlen("64:ff9b::")) == 0) {
+				rspamd_inet_addr_t *addr_v4 = NULL;
+				addr_v4 = rspamd_inet_addr_create (AF_INET);
+				memcpy (&addr_v4->u.in.addr.s4.sin_addr, addr->u.in.addr.s6.sin6_addr.s6_addr + 12,
+					sizeof (struct in_addr));
+				rspamd_inet_address_set_port (addr_v4, rspamd_inet_address_get_port (addr));
+				rspamd_inet_address_free(addr);
+				addr = addr_v4;
+			}
+		}
+
 		*target = addr;
 	}
 
@@ -967,6 +985,22 @@
 		return -1;
 	}
 
+	// Force to connect in IPv6 with 64:ff9b prefixe for IPv4 translation.
+
+	if (addr->af == AF_INET) {
+		rspamd_inet_addr_t *addr_v6 = NULL;
+		addr_v6 = rspamd_inet_addr_create (AF_INET6);
+
+		static char addr_str[INET6_ADDRSTRLEN + 1];
+		strcpy(addr_str, "64:ff9b::");
+		strcat(addr_str, rspamd_inet_address_to_string (addr));
+		inet_pton(AF_INET6, addr_str, &addr_v6->u.in.addr.s6.sin6_addr);
+
+		rspamd_inet_address_set_port (addr_v6, rspamd_inet_address_get_port (addr));
+
+		addr = addr_v6;
+	}
+
 	fd = rspamd_socket_create (addr->af, type, 0, async);
 	if (fd == -1) {
 		return -1;
